pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                jenkins: jenkins-agent-node-docker
            spec:
              containers:
              - name: jenkins-agent-node-docker
                image: vincemontana/jenkins-agent-node-docker
                command:
                - cat
                tty: true
              """
              defaultContainer 'jenkins-agent-node-docker'
        }
    }

    environment {
        DOCKER_IMAGE = "MiApp"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: REPOSITORY, branch: BRANCH
                sh 'ls -last'
                sh 'which node'
                sh 'which npm'
                sh 'node -v'
                sh 'npm -v'
            }
        }
        
        stage('Instalaci√≥n de dependencias') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Lint') {
            steps {
                script {
                    sh 'npm run lint'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'npm test'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'npm run build'
                }
            }
        }
 
        stage('Crear Imagen Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                            docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE:$BUILD_NUMBER .
                        '''
                    }
                }
            }
        }

        stage('Subir a un repositorio de artefactos') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                            docker push $DOCKER_USERNAME/$DOCKER_IMAGE:$BUILD_NUMBER
                        '''
                    }
                }
            }
        }

        stage('Desplegar en Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl set image deployment/mi-app-deployment mi-app-container=${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER} --record
                    """
                }
            }
        }
    }
}
