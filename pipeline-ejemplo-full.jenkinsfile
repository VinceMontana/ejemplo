pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: jnlp
                image: vincemontana/jenkins-agent-node-docker
                command:
                - cat
                tty: true
              """
              defaultContainer 'jnlp'
        }
    }

    environment {
        DOCKER_REGISTRY = 'VinceeMontana'
        DOCKER_IMAGE = "MiApp"
    }

    stages {
        stage('Configurando pipeline') {
            steps {
                git url: REPOSITORIO, branch: 'master'
                sh 'ls -last'
                sh 'which node'
                sh 'which npm'
                sh 'node -v'
                sh 'npm -v'
            }
        }
        
        stage('Instalaci√≥n de dependencias') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Lint') {
            steps {
                script {
                    sh 'npm run lint'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'npm test'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'npm run build'
                }
            }
        }

        stage('Crear Imagen Docker') {
            steps {
                script {

                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        // Realiza el login a Docker
                        sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        '''
                    }

                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Subir a un repositorio de artefactos') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
                    sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Desplegar en Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl set image deployment/mi-app-deployment mi-app-container=${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER} --record
                    """
                }
            }
        }
    }
}
